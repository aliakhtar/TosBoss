- Change things like 'third' to 3rd

- Remove redundant 'the's in CAN/CANT/MUST lists, e.g 'permit X to use the software' => permit X to use software

- Things like "The terms of this agreement" => "These terms"

- Remove redundant can/shall, e.g "these terms shall also apply" => "these terms apply"

- Remove things like 'that have been', e.g 'things that have been' -> 'things' ( within lists)

- Convert terms like 'reviewing' to 'review'

- Consider having an 'applies to' section which lists what the terms apply to. E.g
which particular product.

- Consider having nested lists for things in and/or. (See applies to of 3Scale)

- Have the nested lists be smart, e.g when its just a few words, just use "X or Y"
rather than -X, -Y


- Terms to always remove:
   "in [x] sole discretion",
   sentences referring to section x.x,
   "set forth in",
   "section of this agreement" -> "section"
   "in any way[or form]",
   "you agree that" / "you acknowledge that" / "you understand",,
   "reserves the right" to bla bla,
   "you expressly understand" / "you understand",
   "Notwithstanding the foregoing",
   "including without limitation" / "including but not limited to",
   "at any time", "without prior notice",
   words like "additionally",
   "we may",
   "of course",
   "we are able to",
   "subject to bla bla bla",
   "without ___ foregoing",

- Remove words in paragraphs and quotes ("bla bla" bla), and remove numbers from the
start of paragraphs, e.g "1.2 bla bla". Also remove stuff in brackets that contains
more than one word (bla bla)

- Consider monitoring the context between paragraphs. So e.g, if the previous
paragraph ended with colons, and had the words "may not" or "cannot" or "forbidden"
or such (use POS), and the next paragraph seems to be a list of something, then
automatically detect and add those things to the 'you can't' list. Same goes for
'you can' if the last paragraph said 'you may'. Also "You may not do any of the following:".
- Semicolons may be used to terminate items in a list, while still being under the context of the last paragraph.

- Make a list of company names, train a classifier to recognize the names.

- If a result item is too long, scan it to see if it contains lists, either with just
commas, or (1), (2) etc, or (i), (ii), or (a)

- Ignore any final result that ends with colons, e.g "You agree to bla bla if bla bla including:",